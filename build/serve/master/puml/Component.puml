@startuml
set separator none
title Example E-Commerce Store - API - Components

top to bottom direction

!include <C4/C4>
!include <C4/C4_Context>
!include <C4/C4_Container>
!include <C4/C4_Component>

Person(Customer, "Customer", $descr="", $tags="", $link="")
Person(WarehouseStaff, "Warehouse Staff", $descr="", $tags="", $link="")
Container(ExampleECommerceStore.WebAppSPA, "Web App SPA", $techn="Angular", $descr="E-Commerce Store", $tags="", $link="")
Container(ExampleECommerceStore.StockManagementPortalSPA, "Stock Management Portal SPA", $techn="Angular", $descr="Order fulfillment, stock management, order dispatch", $tags="", $link="")
ContainerDb(ExampleECommerceStore.Database, "Database", $techn="SQL Server", $descr="Customers, Orders, Payments", $tags="", $link="")

Container_Boundary("ExampleECommerceStore.API_boundary", "API", $tags="") {
  AddBoundaryTag("Application Layer", $borderColor="#cccccc", $fontColor="#cccccc", $borderStyle="dashed")
  Boundary(group_1, "Application Layer", $tags="Application Layer") {
    Component(ExampleECommerceStore.API.CommandHandler, "Command Handler", $techn="MediatR request handler", $descr="Business logic for changing state and triggering events", $tags="", $link="")
    Component(ExampleECommerceStore.API.QueryHandler, "Query Handler", $techn="MediatR request handler", $descr="Business logic for retrieving data", $tags="", $link="")
    Component(ExampleECommerceStore.API.CommandValidator, "Command Validator", $techn="Fluent Validation", $descr="Business validation prior to changing state", $tags="", $link="")
  }

  AddBoundaryTag("Domain Layer", $borderColor="#cccccc", $fontColor="#cccccc", $borderStyle="dashed")
  Boundary(group_2, "Domain Layer", $tags="Domain Layer") {
    Component(ExampleECommerceStore.API.Model, "Model", $techn="DTO/POCO classes", $descr="Domain models", $tags="", $link="")
  }

  AddBoundaryTag("Infrastructure Layer", $borderColor="#cccccc", $fontColor="#cccccc", $borderStyle="dashed")
  Boundary(group_3, "Infrastructure Layer", $tags="Infrastructure Layer") {
    Component(ExampleECommerceStore.API.DBContext, "DB Context", $techn="Entity Framework Core", $descr="ORM - Maps LINQ queries to the data store", $tags="", $link="")
  }

  AddBoundaryTag("Web Layer", $borderColor="#cccccc", $fontColor="#cccccc", $borderStyle="dashed")
  Boundary(group_4, "Web Layer", $tags="Web Layer") {
    Component(ExampleECommerceStore.API.AuthorizationPolicy, "Authorization Policy", $techn="ASP.NET Core", $descr="Authentication and authorization", $tags="", $link="")
    Component(ExampleECommerceStore.API.APIController, "API Controller", $techn="ASP.NET Core", $descr="Requests, responses, routing and serialization", $tags="", $link="")
    Component(ExampleECommerceStore.API.MediatR, "MediatR", $techn="MediatR", $descr="Provides decoupling of requests and handlers", $tags="", $link="")
  }

}

Rel(Customer, ExampleECommerceStore.WebAppSPA, "Places Orders", $techn="https", $tags="", $link="")
Rel(WarehouseStaff, ExampleECommerceStore.StockManagementPortalSPA, "Dispatches Orders", $techn="https", $tags="", $link="")
Rel(ExampleECommerceStore.API.DBContext, ExampleECommerceStore.Database, "stores and retrieves data", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.WebAppSPA, ExampleECommerceStore.API.APIController, "calls", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.StockManagementPortalSPA, ExampleECommerceStore.API.APIController, "calls", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.API.APIController, ExampleECommerceStore.API.AuthorizationPolicy, "authenticated and authorized by", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.API.APIController, ExampleECommerceStore.API.MediatR, "sends queries & commands to", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.API.MediatR, ExampleECommerceStore.API.QueryHandler, "sends query to", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.API.MediatR, ExampleECommerceStore.API.CommandValidator, "sends command to", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.API.CommandValidator, ExampleECommerceStore.API.CommandHandler, "passes command to", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.API.QueryHandler, ExampleECommerceStore.API.DBContext, "Gets data from", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.API.CommandHandler, ExampleECommerceStore.API.DBContext, "Update data in", $techn="", $tags="", $link="")
Rel(ExampleECommerceStore.API.DBContext, ExampleECommerceStore.API.Model, "contains collections of", $techn="", $tags="", $link="")

SHOW_LEGEND(true)
@enduml